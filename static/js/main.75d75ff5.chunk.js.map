{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","taskFromServer","getTasks","fetch","result","json","data","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75d75ff5.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color , text, onClick}) => {\r\n    return (\r\n        <button \r\n        style = {{ backgroundColor: color }} \r\n        className ='btn'\r\n        onClick = {onClick}>\r\n        {text}\r\n        </button>\r\n    )\r\n}\r\nButton.defaultProps = {\r\n    color:'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text:PropTypes.string,\r\n    color:PropTypes.string,\r\n    onClick:PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n// since we don't use the add button in About section\r\n// I will import uselocation to disable it \r\nimport {useLocation} from 'react-router-dom'\r\n\r\n// just to make it as reusable as we can\r\nconst Header = ({title , onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n        <h1>{ title }</h1> \r\n        {/* don't show the button if the location is '/'  */}\r\n        {location.pathname ==='/' && (\r\n        <Button color={showAdd ? 'red' : 'green'} \r\n        text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>)}\r\n        </header>\r\n    )\r\n}\r\n\r\n// seting the defaultprop for the title\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\n// limiting the title with string type\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header\r\n","// after install the react-icons we import it\r\n\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\n// passing task as aprop for Task to be defind\r\n// and taking each text from the arr according to the key\r\n// which we chosse it as the id.\r\nconst Task = ({task ,onDelete ,onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={()=> onToggle(task.id)}>\r\n            <h3>{task.text} {''}\r\n            {/* the x icon is here */}\r\n            <FaTimes style={{color:'red', cursor:'pointer'}} \r\n            onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Task\r\n","// importing Task and use it as Porp for Tasks\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n\r\n    \r\n    return (\r\n        <>\r\n            {tasks.map((task,index) =>\r\n            // keeping the id as a uniqe key and passing task as Prop\r\n            (<Task key={index} \r\n                task={task} \r\n                onDelete={onDelete}\r\n                onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text , day , reminder})\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label> Task</label>\r\n                <input type=\"text\" placeholder='Add Task'\r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label> Day & Time </label>\r\n                <input type=\"text\" placeholder='Add Day & Time'\r\n                value={day} \r\n                onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                checked= {reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type=\"submit\" className='btn btn-block' value='Save Task'/>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer> \r\n            <p>Copyright&copy; <string>Amjad Oudeh</string> 2021</p>\r\n            <Link to='/about'>About</Link>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","// to avoid reloading another page, I will\r\n// import a link from react-router-dom\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='about'>\r\n            <h4>The Final Porject of CS50x</h4>\r\n            <p>I'm Amjad Oudeh and I made this Porject\r\n                using React.js with Hooks for the UI and JSON\r\n                server for the Backend\r\n            </p>\r\n            <Link to='/'>Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState , useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About'\n\nfunction App() {\n  const [showAddTask , setShowAddTask] = useState(false)\n  const [tasks , setTasks ] = useState([])\n  \n  // useEffect \n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks()\n      setTasks(taskFromServer)\n    }\n      getTasks()\n  }, [])\n\n  // Fetching Tasks from the backend\n    const fetchTasks = async () => {\n      const result = await fetch('http://localhost:5000/tasks')\n      const data = await result.json()\n      console.log(data)\n      return data\n    }\n\n  // Fetching Task from the backend // just for fix the reminder in UI\n  const fetchTask = async (id) => {\n    const result = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await result.json()\n    return data\n  }\n\n\n  // Add Task\n  const addTask = async (task) => {\n    const result = await fetch('http://localhost:5000/tasks', {\n      // post method because we adding data to the UI\n      method: 'POST',\n      // since we adding data, we need to add headers = SO IMPORTANT\n      headers: { \n        'Content-type': 'application/json'\n      },\n      // just to convert it from JS type to JSON type\n      body: JSON.stringify(task)\n    })\n\n    const data =await result.json()\n\n    setTasks([...tasks, data])\n\n    \n    // // getting a random number and set to the id \n    // const id = Math.floor(Math.random() * 10000) + 1\n    // // giving the new task an id\n    // const newTask = {id , ...task}\n    // // adding the new task to the arr\n    // setTasks([...tasks, newTask])\n  }\n  //Delete Task function\n  const deleteTask = async (id) => {\n    // delete from the server as well \n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    // getting the task and then creating a new task \n    // and put it in a variable\n    const taskToToggle = await fetchTask(id)\n    const updateTask = {...taskToToggle, \n    reminder: !taskToToggle.reminder}\n\n    //just fetching the data form the Backend server\n    const result = await fetch(`http://localhost:5000/tasks/${id}`,{\n      // since we updating so we use PUT method\n      method: 'PUT',\n      // sending data\n      headers: {\n        'Content-type':'application/json'\n      },\n      body: JSON.stringify(updateTask)\n    })\n\n    const data = await result.json()\n\n    setTasks(tasks.map((task) =>\n    // setting the reminder to the other value\n    task.id === id ? {...task, reminder: data.reminder} : task\n    ))\n  }\n\n  return (\n    <Router>\n    {/* Rendering the Header.js  */}\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask\n        (!showAddTask)} showAdd={showAddTask}/>\n\n      {/* it is false by defualt so it will not show the task,\n      just a short way to write the if also because we don't\n      need to use ELSE */}\n      \n      <Route path='/' exact \n      render={(props) => (\n        <>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n\n        {/* this an if condtion just in case we do have any \n        task to show ,will show this message */}\n        { tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask}\n\n        onToggle = {toggleReminder}\n        />):('No Tasks to Show')}\n        </>\n      )}/>\n      <Route path='/about' component={About}/>\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}